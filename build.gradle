ext {
    springVersion = "4.3.8.RELEASE"
    jacksonVersion = "2.9.0.pr2"
    dockerComposeRuleVersion = "0.33.0"
    slf4jVersion = "1.7.25"
    guavaVersion = "23.0"
    lombokVersion = "1.16.18"
    jacksonDataFormatYamlVersion = "2.9.1"
    httpClientVersion = "4.5.3"
    dockerClientVersion = "8.9.2"
    stringTemplateVersion = "4.0.2"
    junitVersion = "4.12"
    commonsLang3Version = "3.6"
    logbackVersion = '1.2.3'
    toolboxVersion = "1.0.5649c27"
    jsoupVersion = "1.11.2"

}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4"
    }
}

subprojects {
    group "com.infinera.metro.dnam.test.acceptance"
    version "1.0"

    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    apply plugin: 'java'
    compileJava {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    apply plugin: "com.jfrog.artifactory"

    /** Artifactory settings **/
    if (project.hasProperty('partOfLatestCommitHash')) {
        project.version = project.version + "." + project.partOfLatestCommitHash
    }
    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        //The base Artifactory URL if not overridden by the publisher/resolver
        publish {
            repository {
                repoKey = "libs-local"
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications('impl')
            }
        }
    }

    publishing {
        publications {
            impl(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    test {
        testLogging {
            showStandardStreams = true
            events 'started', 'passed'
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://dl.bintray.com/palantir/releases' // docker-compose-rule is published on bintray
        }

        maven {
            url "https://se-artif-prd.infinera.com/artifactory/repo"
            credentials {
                username = "tnmbuild"
                password = "APGLa2kNd3Da4vLTKo6uWuMcdH"
            }
        }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "com.google.guava:guava:${guavaVersion}"
        compile "org.projectlombok:lombok:${lombokVersion}"
        testCompile "junit:junit:${junitVersion}"
    }
}

project(':xtm-rest-client-configuration') {
    dependencies {
        compile project(':xtm-rest-client-common')
        compile project(':xtm-rest-client-impl')
        compile project(':xtm-docker-runner')
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonDataFormatYamlVersion}"
    }
}

project(':xtm-rest-client-impl') {
    apply from: "${rootDir}/integration-test.gradle"

    dependencies {
        compile project(':xtm-rest-client-common')
        compile "com.infinera.metro.networkmanager.tools:toolbox:${toolboxVersion}"
        compile "org.apache.httpcomponents:httpclient:${httpClientVersion}"
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.antlr:stringtemplate:${stringTemplateVersion}"
        compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.spotify:docker-client:${dockerClientVersion}"
        compile "org.jsoup:jsoup:${jsoupVersion}"
        compile "com.infinera.metro.networkmanager.tools:toolbox:-1.0.5649c27"
    }
}

project(':xtm-rest-client-common') {
    dependencies {
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "org.springframework:spring-core:${springVersion}"
        compile "junit:junit:${junitVersion}"
        compile "com.palantir.docker.compose:docker-compose-rule-junit4:${dockerComposeRuleVersion}"
    }
}

project(':xtm-docker-runner') {
    dependencies {
        compile "com.spotify:docker-client:${dockerClientVersion}"
    }
}
